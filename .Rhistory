:q
q()
data = read.csv(file.choose(), header=True)
pwd()
wd()
getwd()
setwd('/home/matthew/Documents/Github/github_pred')
data = read.csv(file.choose(), header=True)
data = read.csv('data/repositories.csv', header=True)
data = read.csv('data/repositories.csv', header=true)
?read.csv
data = read.csv('data/repositories.csv', header=TRUE)
)
head(data)
names(data) <- c('id','repo','stars','created_at','updated_at')
install.packages("ggplot2")
head(data)
hist(data$stars)
hist(data$stars, breaks = 100)
hist(data$stars, breaks = 1000)
hist(data$stars, breaks = 10000)
summary(data$stars)
hist(data$created_at)
str(data)
data.stars.ecdf <- ecdf(data$stars)
data.stars.ecdf
plot(ozone.ecdf, xlab = 'Sample Quantiles of Ozone', ylab = '', main = 'Empirical Cumluative Distribution\nOzone Pollution in New York')
mtext(text = expression(hat(F)[n](x)), side = 2, line = 2.5)
data.stars.ecdf <- ecdf(data$stars)
plot(ozone.ecdf, xlab = 'Sample Quantiles of Ozone', ylab = '', main = 'Empirical Cumluative Distribution\nOzone Pollution in New York')
mtext(text = expression(hat(F)[n](x)), side = 2, line = 2.5)
dev.off()
data.stars.ecdf <- ecdf(data$stars)
plot(ozone.ecdf, xlab = 'Sample Quantiles of Ozone', ylab = '', main = 'Empirical Cumluative Distribution\nOzone Pollution in New York')
mtext(text = expression(hat(F)[n](x)), side = 2, line = 2.5)
summary(data$stars)
data.stars.ecdf <- ecdf(data$stars)
plot(data.stars.ecdf, xlab = 'Sample quantiles of stars', ylab = '', main = 'Stars Distribution of Sampled Github Repo')
mtext(text = expression(hat(F)[n](x)), side = 2, line = 2.5)
hist(data$stars, breaks = 10000)
?hist
hist(data$stars, xlim=c(0,1000),breaks = 1000)
hist(data$stars, xlim=c(0,1000),breaks = 100)
?hist
hist(data$stars, xlim=c(0,1000),breaks = 10000)
hist(data$stars, xlim=c(0,100),breaks = 10000)
hist(data$stars, xlim=c(0,100),breaks = 10000, col='red')
hist(data$stars, xlim=c(0,500),breaks = 10000, col='red')
hist(data$stars, xlim=c(0,500),breaks = 10000, col='red', xlab="Number of Stars", main="Distribution of Sampled Github Repo Stars")
plot(data.stars.ecdf, xlab = 'Sample quantiles of stars', ylab = '', main = 'Accumulated Distribution of Sampled Github Repo Stars')
summary(data$stars)
?plot.ecdf
head(data)
head(strsplit(dat$created_at))
head(strsplit(data$created_at))
head(strsplit(data$created_at,' '))
head(strsplit(data$created_at," "))
strsplit(data$created_at, " ")
data$created_at <- as.character(data$created_at)
data$updated_at <- as.character(data$updated_at)
str(data)
strsplit(data$created_at, " ")
substr(data$created_at,0,9)
data$created_at_date <- as.Date(substr(data$created_at, 0, 10))
data$updated_at_date <- as.Date(substr(data$updated_at, 0, 10))
head(data)
hist(data$created_at_date)
hist(data$created_at_date, breaks = 100)
hist(data$created_at_date, breaks = 10)
hist(data$created_at_date, breaks = 36)
hist(data$updated_at_date, breaks = 36)
hist(data$updated_at_date, breaks = 100)
install.packages("scales")
library(scales)
library(ggplot2)
ggplot(data, aes(x=created_at)) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="3 month"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="3 months"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width=1 month"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="3 months"))
ggplot(data, aes(x=created_at_date, fill="blue")) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="3 months"))
ggplot(data, aes(x=created_at_date, fill="red")) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="3 months"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity", fill="red") +
scale_x_date(breaks=date_breaks(width="3 months"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months")) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months")) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
theme_bw()
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months")) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=1, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months")) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=1, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="6 months")) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=1, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months")) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=1, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="6 months")) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months")) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="6 months")) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="6 months")) +
xlim('2015-01-01','2016-10-01') +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
xlim('2015-01-01','2016-10-01') +
scale_x_date(breaks=date_breaks(width="6 months")) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="6 months"), limits=c('2015-01-01','2016-10-01')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
min_date = as.Date('2015-01-01')
max_date = as.Date('2016-10-01')
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="6 months"), limits=c(min_date,max_date)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue", ) +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
scale_y_continous(limits=c(0,5000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue", ) +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
scale_y_continuous(limits=c(0,5000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=1, position="identity", fill="blue", ) +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
scale_y_continuous(limits=c(0,5000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue", ) +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
# scale_y_continuous(limits=c(0,5000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=1, position="identity", fill="blue", ) +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
# scale_y_continuous(limits=c(0,5000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue", ) +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
# scale_y_continuous(limits=c(0,5000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue", ) +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
scale_y_continuous(limits=c(0,1000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue", ) +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
scale_y_continuous(limits=c(0,10000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue", ) +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
scale_y_continuous(limits=c(0,1000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue", ) +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
# scale_y_continuous(limits=c(0,1000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
head(data)
head(data, 100)
freq(data$updated_at_date)
table(data$updated_at_date)
table(data$updated_at)
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
# scale_y_continuous(limits=c(0,1000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
scale_y_continuous(limits=c(0,1000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
data.stars.ecdf <- ecdf(data$stars)
plot(data.stars.ecdf, xlab = 'Sample quantiles of stars', ylab = '', main = 'Accumulated Distribution of Sampled Github Repo Stars')
mtext(text = expression(hat(F)[n](x)), side = 2, line = 2.5)
plot(data$created_at_date, data$stars)
plot(data$updated_at_date, data$stars)
plot(data$updated_at_date, data$stars, xlab="updated_at", ylab="Number of Stars", main="Trend of stars based on most recent update_at date")
?plot
plot(data$updated_at_date, data$stars, xlab="updated_at", ylab="Number of Stars", type="p"
main="Trend of stars based on most recent update_at date")
plot(data$updated_at_date, data$stars, xlab="updated_at", ylab="Number of Stars",
main="Trend of stars based on most recent update_at date")
plot(data$updated_at_date, data$stars, xlab="updated_at", ylab="Number of Stars",
main="Trend of stars based on most recent update_at date", ylim = c(0,5000))
hist(data$stars, xlim=c(0,500),breaks = 10000, col='red', xlab="Number of Stars", main="Distribution of Sampled Github Repo Stars")
ggplot(data, aes(x=created_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
min_date = as.Date('2015-01-01')
max_date = as.Date('2016-10-01')
ggplot(data, aes(x=updated_at_date)) +
stat_bin(binwidth=5, position="identity", fill="blue") +
scale_x_date(breaks=date_breaks(width="3 months"), limits=c(min_date,max_date)) +
scale_y_continuous(limits=c(0,1000)) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"))
plot(data$updated_at_date, data$stars, xlab="updated_at", ylab="Number of Stars",
main="Trend of stars based on most recent update_at date", ylim = c(0,5000))
plot(data$updated_at_date, data$stars, xlab="updated_at", ylab="Number of Stars",
main="Trend of stars based on most recent update_at date", ylim = c(0,5000), col="grey")
plot(data$updated_at_date, data$stars, xlab="updated_at", ylab="Number of Stars",
main="Trend of stars based on most recent update_at date", ylim = c(0,5000), col="purple")
plot(data$updated_at_date, data$stars, xlab="updated_at", ylab="Number of Stars",
main="Trend of stars based on most recent update_at date", ylim = c(0,5000), col="red")
plot(data$created_at_date, data$stars)
most_recent_point <-as.Date('2016-08-01')
filtered <- data[which(data$updated_at_date > most_recent_point),]
filtered
head(filtered)
nrow(filtered)
nrow(filtered)
